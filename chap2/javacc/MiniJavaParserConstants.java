/* Generated By:JavaCC: Do not edit this line. MiniJavaParserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface MiniJavaParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int ID = 1;
  /** RegularExpression Id. */
  int LETTER = 2;
  /** RegularExpression Id. */
  int DIGIT = 3;
  /** RegularExpression Id. */
  int INT = 4;
  /** RegularExpression Id. */
  int INT_ARRAY = 5;
  /** RegularExpression Id. */
  int BOOLEAN = 6;
  /** RegularExpression Id. */
  int CLASS = 7;
  /** RegularExpression Id. */
  int THIS = 8;
  /** RegularExpression Id. */
  int EXTENDS = 9;
  /** RegularExpression Id. */
  int PUBLIC = 10;
  /** RegularExpression Id. */
  int STATIC = 11;
  /** RegularExpression Id. */
  int VOID = 12;
  /** RegularExpression Id. */
  int RETURN = 13;
  /** RegularExpression Id. */
  int MAIN = 14;
  /** RegularExpression Id. */
  int IF = 15;
  /** RegularExpression Id. */
  int ELSE = 16;
  /** RegularExpression Id. */
  int WHILE = 17;
  /** RegularExpression Id. */
  int PRINT = 18;
  /** RegularExpression Id. */
  int NEW = 19;
  /** RegularExpression Id. */
  int STRING = 20;
  /** RegularExpression Id. */
  int LENGTH = 21;
  /** RegularExpression Id. */
  int LPAREN = 22;
  /** RegularExpression Id. */
  int RPAREN = 23;
  /** RegularExpression Id. */
  int LBRACE = 24;
  /** RegularExpression Id. */
  int RBRACE = 25;
  /** RegularExpression Id. */
  int LBRACKET = 26;
  /** RegularExpression Id. */
  int RBRACKET = 27;
  /** RegularExpression Id. */
  int SEMICOLON = 28;
  /** RegularExpression Id. */
  int COMMA = 29;
  /** RegularExpression Id. */
  int DOT = 30;
  /** RegularExpression Id. */
  int ASSIGN = 35;
  /** RegularExpression Id. */
  int GT = 36;
  /** RegularExpression Id. */
  int LT = 37;
  /** RegularExpression Id. */
  int NOT = 38;
  /** RegularExpression Id. */
  int EQ = 39;
  /** RegularExpression Id. */
  int OR = 40;
  /** RegularExpression Id. */
  int AND = 41;
  /** RegularExpression Id. */
  int PLUS = 42;
  /** RegularExpression Id. */
  int MINUS = 43;
  /** RegularExpression Id. */
  int STAR = 44;
  /** RegularExpression Id. */
  int SLASH = 45;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 46;
  /** RegularExpression Id. */
  int FORMAL_COMMENT = 47;
  /** RegularExpression Id. */
  int MULTI_LINE_COMMENT = 48;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 49;
  /** RegularExpression Id. */
  int BOOLEAN_LITERAL = 50;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<ID>",
    "<LETTER>",
    "<DIGIT>",
    "\"int\"",
    "<INT_ARRAY>",
    "\"boolean\"",
    "\"class\"",
    "\"this\"",
    "\"extends\"",
    "\"public\"",
    "\"static\"",
    "\"void\"",
    "\"return\"",
    "\"main\"",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"System.out.println\"",
    "\"new\"",
    "\"String\"",
    "\"length\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\",\"",
    "\".\"",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"=\"",
    "\">\"",
    "\"<\"",
    "\"!\"",
    "\"==\"",
    "\"||\"",
    "\"&&\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "<SINGLE_LINE_COMMENT>",
    "<FORMAL_COMMENT>",
    "<MULTI_LINE_COMMENT>",
    "<INTEGER_LITERAL>",
    "<BOOLEAN_LITERAL>",
    "\"true\"",
    "\"false\"",
  };

}
